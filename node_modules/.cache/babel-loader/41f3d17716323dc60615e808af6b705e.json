{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kasper\\\\test\\\\Vo\\\\react-multi-choice-quiz\\\\src\\\\components\\\\AnswerOption.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  return React.createElement(\"li\", {\n    className: key.type = props.answer ? \"answerOptions + No\" : \"answerOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    className: \"radioCustomButton\",\n    name: \"radioGroup\",\n    checked: props.answerType === props.answer,\n    id: props.answerType,\n    value: props.answerType,\n    disabled: props.answer,\n    onChange: props.onAnswerSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"radioCustomLabel\",\n    htmlFor: props.answerType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.answerContent));\n}\n\nAnswerOption.propTypes = {\n  answerType: PropTypes.string.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default AnswerOption;","map":{"version":3,"sources":["C:\\Users\\Kasper\\test\\Vo\\react-multi-choice-quiz\\src\\components\\AnswerOption.js"],"names":["React","PropTypes","AnswerOption","props","key","type","answer","answerType","onAnswerSelected","answerContent","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SACE;AAAI,IAAA,SAAS,EAAEC,GAAG,CAACC,IAAJ,GAAWF,KAAK,CAACG,MAAN,GAAe,oBAAf,GAAsC,eAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,IAAI,EAAC,YAHP;AAIE,IAAA,OAAO,EAAEH,KAAK,CAACI,UAAN,KAAqBJ,KAAK,CAACG,MAJtC;AAKE,IAAA,EAAE,EAAEH,KAAK,CAACI,UALZ;AAME,IAAA,KAAK,EAAEJ,KAAK,CAACI,UANf;AAOE,IAAA,QAAQ,EAAEJ,KAAK,CAACG,MAPlB;AAQE,IAAA,QAAQ,EAAEH,KAAK,CAACK,gBARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,OAAO,EAAEL,KAAK,CAACI,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACM,aADT,CAXF,CADF;AAiBD;;AAEDP,YAAY,CAACQ,SAAb,GAAyB;AACvBH,EAAAA,UAAU,EAAEN,SAAS,CAACU,MAAV,CAAiBC,UADN;AAEvBH,EAAAA,aAAa,EAAER,SAAS,CAACU,MAAV,CAAiBC,UAFT;AAGvBN,EAAAA,MAAM,EAAEL,SAAS,CAACU,MAAV,CAAiBC,UAHF;AAIvBJ,EAAAA,gBAAgB,EAAEP,SAAS,CAACY,IAAV,CAAeD;AAJV,CAAzB;AAOA,eAAeV,YAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AnswerOption(props) {\r\n  return (\r\n    <li className={key.type = props.answer ? \"answerOptions + No\" : \"answerOptions\"}>\r\n      <input\r\n        type=\"radio\"\r\n        className=\"radioCustomButton\"\r\n        name=\"radioGroup\"\r\n        checked={props.answerType === props.answer}\r\n        id={props.answerType}\r\n        value={props.answerType}\r\n        disabled={props.answer}\r\n        onChange={props.onAnswerSelected}\r\n      />\r\n      <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\r\n        {props.answerContent}\r\n      </label>\r\n    </li>\r\n  );\r\n}\r\n\r\nAnswerOption.propTypes = {\r\n  answerType: PropTypes.string.isRequired,\r\n  answerContent: PropTypes.string.isRequired,\r\n  answer: PropTypes.string.isRequired,\r\n  onAnswerSelected: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AnswerOption;\r\n"]},"metadata":{},"sourceType":"module"}