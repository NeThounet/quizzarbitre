{"version":3,"sources":["svg/logo.svg","api/quizQuestions.js","components/Question.js","components/QuestionCount.js","components/AnswerOption.js","components/Quiz.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","quizQuestions","numero","question","answers","type","content","Question","props","react_default","a","createElement","className","QuestionCount","counter","AnswerOption","isQuestion","answerType","answer","name","checked","id","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","Quiz","react_transition_group","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","key","questionId","components_QuestionCount","total","questionTotal","components_Question","answerOptions","map","components_AnswerOption","Result","questionNumero","Button","onClick","onHandleClickNext","animated","Content","visible","hidden","Icon","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","answersCount","result","handleAnswerSelected","bind","assertThisInitialized","handleClickNext","_this2","shuffledAnswerOptions","shuffleArray","setState","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","event","setUserAnswer","currentTarget","_this3","setTimeout","setNextQuestion","i","console","log","getGoodAnswer","getResults","components_Quiz","components_Result","renderResult","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59287065.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.05a3e30f.svg\";","var quizQuestions = [\r\n    {\r\n        numero: 1.1,\r\n        question: \"Selon la procédure de remplacement, un joueur amené à être remplacé quitte Ce terrain\",\r\n        answers: [\r\n            {\r\n                type: \"No3\",\r\n                content: \"Impérativement par le point le plus proche de l'endroit où il se trouve\"\r\n            },\r\n            {\r\n                type: \"No1\",\r\n                content: \"Par le point le plus proche de l'endroit où il se trouve sauf s'il est blessé.\"\r\n            },\r\n            {\r\n                type: \"No2\",\r\n                content: \"Par le point le plus proche de l'endroit où il se trouve ou bien par la ligne médiane\"\r\n            },\r\n            {\r\n                type: \"Yes\",\r\n                content: \"Par le point te plus proche de l'endroit où il se trouve, à moins d'une autorisation de l'arbitre pour sortir à un autre endroit\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        numero: 1.2,\r\n        question: \"Dans quel cas un officiel d'équipe se verra infliger une mise en garde (rappel à l'ordre) et non un avertissement ?\",\r\n        answers: [\r\n            {\r\n                type: \"No2\",\r\n                content: \"manifester sa désapprobation par la parole ou par des gestes en jetant ou donnant des coups de pied dans une bouteille\"\r\n            },\r\n            {\r\n                type: \"No1\",\r\n                content: \"retarder la reprise du jeu de son équipe\"\r\n            },\r\n            {\r\n                type: \"Yes\",\r\n                content: \"pénétrer sur le terrain de manière respectueuse, sans chercher la confrontation\"\r\n            },\r\n            {\r\n                type: \"No3\",\r\n                content: \"manifester sa désapprobation par la parole ou par des gestes en faisant des gestes montrant clairement un manque de respect envers le corps arbitral\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        numero: 1.3,\r\n        question: \"L'arbitre s'aperçoit qu'un joueur est au sol et arrête immédiatement le jeu alors que le ballon se trouve dans une des surfaces de réparation. Quelle sera la reprise du jeu ?\",\r\n        answers: [\r\n            {\r\n                type: \"No1\",\r\n                content: \"Balle à terre pour l'équipe qui a touché le ballon en dernier lieu à l'endroit où se trouvait le ballon quand le jeu a été arrêté par l'arbitre\"\r\n            },\r\n            {\r\n                type: \"Yes\",\r\n                content: \"Balle à terre pour le gardien de but dans sa surface de réparation\"\r\n            },\r\n            {\r\n                type: \"No2\",\r\n                content: \"Balle à terre à l'endroit où était le ballon au moment de l'arrêt sous réserve de la procédure de la loi 8\"\r\n            },\r\n            {\r\n                type: \"No3\",\r\n                content: \"Balle à terre pour l'équipe du joueur blessé à l'endroit où se trouvait le ballon quand le jeu a été arrêté par l'arbitre\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        numero: 1.4,\r\n        question: \"Il y a, en général, faute de main si un joueur touche le ballon du bras ou de la main :\",\r\n        answers: [\r\n            {\r\n                type: \"Yes\",\r\n                content: \"Lorsque la position de la main ou du bras a artificiellement augmenté la surface couverte par son corps\"\r\n            },\r\n            {\r\n                type: \"No1\",\r\n                content: \"Directement depuis la tête, le tronc ou la jambe d'un autre joueur\"\r\n            },\r\n            {\r\n                type: \"No2\",\r\n                content: \"Lorsqu'il se trouve à plus de deux mètres du joueur adverse\"\r\n            },\r\n            {\r\n                type: \"No3\",\r\n                content: \"Directement depuis sa tête, son tronc ou sa jambe\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        numero: 1.6,\r\n        question: \"Selon la Loi 9. quelle affirmation est fausse ? Une balle à terre ne sera pas accordé quand l'arbitre touche le ballon et :\",\r\n        answers: [\r\n            {\r\n                type: \"Yes\",\r\n                content: \"le ballon sort du terrain\"\r\n            },\r\n            {\r\n                type: \"No1\",\r\n                content: \"le ballon entre directement dans le but\"\r\n            },\r\n            {\r\n                type: \"No2\",\r\n                content: \"une équipe peut entamer une attaque prometteuse\"\r\n            },\r\n            {\r\n                type: \"No3\",\r\n                content: \"le ballon est récupéré par l'équipe adverse\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        numero: 1.7,\r\n        question: \"Un joueur a besoin de soins sur le terrain. Dans quel cas le joueur peut-il rester sur le terrain ?\",\r\n        answers: [\r\n            {\r\n                type: \"No2\",\r\n                content: \"Le joueur subit une faute et l'adversaire est rappelé à l'ordre\"\r\n            },\r\n            {\r\n                type: \"No1\",\r\n                content: \"Le joueur se blesse tout seul\"\r\n            },\r\n            {\r\n                type: \"Yes\",\r\n                content: \"Un penalty est accordé et le joueur blessé est le tireur identifié\"\r\n            },\r\n            {\r\n                type: \"No3\",\r\n                content: \"Le joueur est le capitaine de son équipe\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        numero: 1.8,\r\n        question: \"A quelle distance doit se trouver les autres joueurs lors d'une balle à terre ?\",\r\n        answers: [\r\n            {\r\n                type: \"No2\",\r\n                content: \"A au moins 1 mètre du ballon\"\r\n            },\r\n            {\r\n                type: \"No1\",\r\n                content: \"A au moins 2 mètres du ballon\"\r\n            },\r\n            {\r\n                type: \"Yes\",\r\n                content: \"A au moins 4 mètres du ballon\"\r\n            },\r\n            {\r\n                type: \"No3\",\r\n                content: \"A au moins 9,15 mètres du ballon\"\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default quizQuestions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Question(props) {\r\n  return <h2 className=\"question\">{props.content}</h2>;\r\n}\r\n\r\nQuestion.propTypes = {\r\n  content: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Question;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction QuestionCount(props) {\r\n  return (\r\n    <div className=\"questionCount\">\r\n      Evalbox <span>{props.counter}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuestionCount.propTypes = {\r\n  counter: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default QuestionCount;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//    <li className={props.answerType === props.answer && props.answerType !== \"Yes\" ? \"answerOptions + No\" : \"answerOptions\"}>\r\n\r\n\r\nfunction AnswerOption(props) {\r\n  return (\r\n    <li className={props.isQuestion === \"false\" ? (props.answerType === props.answer ? (props.answerType !== \"Yes\" ? \"answerOption + No\" : \"answerOption Yes\") : (props.answerType === \"Yes\" ? \"answerOption + Yes\" : \"answerOption\")) : \"answerOption\"}>\r\n      <input\r\n        type=\"radio\"\r\n        className=\"radioCustomButton\"\r\n        name=\"radioGroup\"\r\n        checked={props.answerType === props.answer}\r\n        id={props.answerType}\r\n        value={props.answerType}\r\n        disabled={props.answer}\r\n        onChange={props.onAnswerSelected}\r\n      />\r\n      <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\r\n        {props.answerContent}\r\n      </label>\r\n    </li>\r\n  );\r\n}\r\n\r\nAnswerOption.propTypes = {\r\n  isQuestion: PropTypes.string.isRequired,\r\n  answerType: PropTypes.string.isRequired,\r\n  answerContent: PropTypes.string.isRequired,\r\n  answer: PropTypes.string.isRequired,\r\n  onAnswerSelected: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AnswerOption;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport Question from '../components/Question';\r\nimport QuestionCount from '../components/QuestionCount';\r\nimport AnswerOption from '../components/AnswerOption';\r\n\r\nfunction Quiz(props) {\r\n  function renderAnswerOptions(key) {\r\n    return (\r\n      <AnswerOption\r\n        isQuestion={props.isQuestion}\r\n        key={key.content}\r\n        answerContent={key.content}\r\n        answerType={key.type}\r\n        answer={props.answer}\r\n        questionId={props.questionId}\r\n        onAnswerSelected={props.onAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CSSTransitionGroup\r\n      className=\"container\"\r\n      component=\"div\"\r\n      transitionName=\"fade\"\r\n      transitionEnterTimeout={800}\r\n      transitionLeaveTimeout={500}\r\n      transitionAppear\r\n      transitionAppearTimeout={500}\r\n    >\r\n      <div key={props.questionId}>\r\n        <QuestionCount counter={props.questionId} total={props.questionTotal} />\r\n        <Question content={props.question} />\r\n        <ul className=\"answerOptions\">\r\n          {props.answerOptions.map(renderAnswerOptions)}\r\n        </ul>\r\n      </div>\r\n    </CSSTransitionGroup>\r\n  );\r\n}\r\n\r\nQuiz.propTypes = {\r\n  isQuestion: PropTypes.string.isRequired,\r\n  answer: PropTypes.string.isRequired,\r\n  answerOptions: PropTypes.array.isRequired,\r\n  question: PropTypes.string.isRequired,\r\n  questionId: PropTypes.number.isRequired,\r\n  questionTotal: PropTypes.number.isRequired,\r\n  onAnswerSelected: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport AnswerOption from '../components/AnswerOption';\r\nimport Question from '../components/Question';\r\nimport QuestionCount from '../components/QuestionCount';\r\nimport { Button, Icon } from 'semantic-ui-react';\r\n\r\n\r\n\r\n//<ul className={key.type = props.answer ? \"answerOptions + No\" : \"answerOptions\"}>\r\nfunction Result(props) {\r\n  function renderAnswerOptions(key) {\r\n    return (\r\n      <ul className=\"answerOptions\">\r\n        <AnswerOption\r\n          isQuestion={props.isQuestion}\r\n          key={key.content}\r\n          answerContent={key.content}\r\n          answerType={key.type}\r\n          answer={props.answer}\r\n          questionId={props.questionId}\r\n          onAnswerSelected={props.onAnswerSelected}\r\n        /></ul>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CSSTransitionGroup\r\n        className=\"container\"\r\n        component=\"div\"\r\n        transitionName=\"fade\"\r\n        transitionEnterTimeout={800}\r\n        transitionLeaveTimeout={500}\r\n        transitionAppear\r\n        transitionAppearTimeout={500}\r\n      >\r\n        <div>\r\n          <QuestionCount counter={props.questionNumero} />\r\n          <Question content={props.question} />\r\n          {props.answerOptions.map(renderAnswerOptions)}\r\n        </div>\r\n      </CSSTransitionGroup>\r\n      <div className=\"DivButton\">\r\n        {props.isQuestion === \"false\" && <Button className=\"NextButton\" onClick={props.onHandleClickNext} animated>\r\n          <Button.Content visible>Question suivante</Button.Content>\r\n          <Button.Content hidden>\r\n            <Icon name='arrow right' />\r\n          </Button.Content>\r\n        </Button>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nResult.propTypes = {\r\n  isQuestion: PropTypes.string.isRequired,\r\n  questionNumero: PropTypes.string.isRequired,\r\n  answer: PropTypes.string.isRequired,\r\n  answerOptions: PropTypes.array.isRequired,\r\n  question: PropTypes.string.isRequired,\r\n  questionId: PropTypes.number.isRequired,\r\n  questionTotal: PropTypes.number.isRequired,\r\n  onAnswerSelected: PropTypes.func.isRequired,\r\n  onHandleClickNext: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Result;\r\n","import React, { Component } from 'react';\r\nimport quizQuestions from './api/quizQuestions';\r\nimport Quiz from './components/Quiz';\r\nimport Result from './components/Result';\r\nimport logo from './svg/logo.svg';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isQuestion: \"true\",\r\n      counter: 0,\r\n      questionNumero: 0,\r\n      questionId: 1,\r\n      question: '',\r\n      answerOptions: [],\r\n      answer: '',\r\n      answersCount: {},\r\n      result: ''\r\n    };\r\n\r\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n    this.handleClickNext = this.handleClickNext.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const shuffledAnswerOptions = quizQuestions.map(question =>\r\n      this.shuffleArray(question.answers)\r\n    );\r\n    this.setState({\r\n      question: quizQuestions[0].question,\r\n      questionNumero: quizQuestions[0].numero,\r\n      answerOptions: shuffledAnswerOptions[0]\r\n    });\r\n  }\r\n\r\n  shuffleArray(array) {\r\n    var currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  handleAnswerSelected(event) {\r\n    this.setUserAnswer(event.currentTarget.value);\r\n    //setTimeout(() => this.setResults(this.getResults()), 300);\r\n  }\r\n\r\n  handleClickNext(event) {\r\n    setTimeout(() => this.setNextQuestion(), 0);\r\n    this.setState((state, props) => ({\r\n      isQuestion: \"true\"\r\n    }));\r\n  }\r\n\r\n  setUserAnswer(answer) {\r\n    this.setState((state, props) => ({\r\n      answer: answer,\r\n      isQuestion: \"false\"\r\n    }));\r\n  }\r\n\r\n  setNextQuestion() {\r\n    const counter = Math.floor(Math.random() * quizQuestions.length);\r\n    const questionId = this.state.questionId + 1;\r\n\r\n    this.setState({\r\n      counter: counter,\r\n      questionId: questionId,\r\n      question: quizQuestions[counter].question,\r\n      answerOptions: quizQuestions[counter].answers,\r\n      answer: '',\r\n      questionNumero: quizQuestions[counter].numero,\r\n    });\r\n  }\r\n  getGoodAnswer(answerOptions) {\r\n    for (var i = 0; i < answerOptions.length; i++) {\r\n      if (answerOptions[i].type === \"Yes\")\r\n        return i;\r\n    }\r\n  }\r\n  /*getResults() {\r\n    const answersCount = this.state.answersCount;\r\n    const answersCountKeys = Object.keys(answersCount);\r\n    const answersCountValues = answersCountKeys.map(key => answersCount[key]);\r\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\r\n\r\n    return answersCountKeys.filter(key => answersCount[key] === maxAnswerCount);\r\n  }*/\r\n\r\n  getResults() {\r\n    console.log(this.state.answerOptions);\r\n    console.log(this.getGoodAnswer(this.state.answerOptions));\r\n    return this.state.answerOptions[this.getGoodAnswer(this.state.answerOptions)].content;\r\n  }\r\n\r\n  setResults(getResults) {\r\n    this.setState({ result: getResults });\r\n    /*if (result.length === 1) {\r\n      this.setState({ result: result[0] });\r\n    } else {\r\n      this.setState({ result: 'Undetermined' });\r\n    }*/\r\n  }\r\n\r\n  renderQuiz() {\r\n    return (\r\n      <Quiz\r\n        isQuestion={this.state.isQuestion}\r\n        answer={this.state.answer}\r\n        answerOptions={this.state.answerOptions}\r\n        questionId={this.state.questionId}\r\n        question={this.state.question}\r\n        questionTotal={quizQuestions.length}\r\n        onAnswerSelected={this.handleAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderResult() {\r\n    return <Result isQuestion={this.state.isQuestion}\r\n      answer={this.state.answer}\r\n      questionNumero={this.state.questionNumero}\r\n      answerOptions={this.state.answerOptions}\r\n      questionId={this.state.questionId}\r\n      question={this.state.question}\r\n      questionTotal={quizQuestions.length}\r\n      onAnswerSelected={this.handleAnswerSelected}\r\n      onHandleClickNext={this.handleClickNext}\r\n    />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"App-header\">\r\n          <h2>Quizz arbitre district de la gironde, évalbox LFNA</h2>\r\n        </div>\r\n        {this.renderResult()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}